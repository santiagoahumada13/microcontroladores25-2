

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 23 11:52:54 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     008F                     OSCCON          equ	143	;# 
    98     0090                     OSCTUNE         equ	144	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0093                     SSPMSK          equ	147	;# 
   103     0093                     MSK             equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0095                     WPUB            equ	149	;# 
   106     0096                     IOCB            equ	150	;# 
   107     0097                     VRCON           equ	151	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009A                     SPBRGH          equ	154	;# 
   111     009B                     PWM1CON         equ	155	;# 
   112     009C                     ECCPAS          equ	156	;# 
   113     009D                     PSTRCON         equ	157	;# 
   114     009E                     ADRESL          equ	158	;# 
   115     009F                     ADCON1          equ	159	;# 
   116     0105                     WDTCON          equ	261	;# 
   117     0107                     CM1CON0         equ	263	;# 
   118     0108                     CM2CON0         equ	264	;# 
   119     0109                     CM2CON1         equ	265	;# 
   120     010C                     EEDATA          equ	268	;# 
   121     010C                     EEDAT           equ	268	;# 
   122     010D                     EEADR           equ	269	;# 
   123     010E                     EEDATH          equ	270	;# 
   124     010F                     EEADRH          equ	271	;# 
   125     0185                     SRCON           equ	389	;# 
   126     0187                     BAUDCTL         equ	391	;# 
   127     0188                     ANSEL           equ	392	;# 
   128     0189                     ANSELH          equ	393	;# 
   129     018C                     EECON1          equ	396	;# 
   130     018D                     EECON2          equ	397	;# 
   131     0000                     INDF            equ	0	;# 
   132     0001                     TMR0            equ	1	;# 
   133     0002                     PCL             equ	2	;# 
   134     0003                     STATUS          equ	3	;# 
   135     0004                     FSR             equ	4	;# 
   136     0005                     PORTA           equ	5	;# 
   137     0006                     PORTB           equ	6	;# 
   138     0007                     PORTC           equ	7	;# 
   139     0008                     PORTD           equ	8	;# 
   140     0009                     PORTE           equ	9	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000D                     PIR2            equ	13	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0011                     TMR2            equ	17	;# 
   150     0012                     T2CON           equ	18	;# 
   151     0013                     SSPBUF          equ	19	;# 
   152     0014                     SSPCON          equ	20	;# 
   153     0015                     CCPR1           equ	21	;# 
   154     0015                     CCPR1L          equ	21	;# 
   155     0016                     CCPR1H          equ	22	;# 
   156     0017                     CCP1CON         equ	23	;# 
   157     0018                     RCSTA           equ	24	;# 
   158     0019                     TXREG           equ	25	;# 
   159     001A                     RCREG           equ	26	;# 
   160     001B                     CCPR2           equ	27	;# 
   161     001B                     CCPR2L          equ	27	;# 
   162     001C                     CCPR2H          equ	28	;# 
   163     001D                     CCP2CON         equ	29	;# 
   164     001E                     ADRESH          equ	30	;# 
   165     001F                     ADCON0          equ	31	;# 
   166     0081                     OPTION_REG      equ	129	;# 
   167     0085                     TRISA           equ	133	;# 
   168     0086                     TRISB           equ	134	;# 
   169     0087                     TRISC           equ	135	;# 
   170     0088                     TRISD           equ	136	;# 
   171     0089                     TRISE           equ	137	;# 
   172     008C                     PIE1            equ	140	;# 
   173     008D                     PIE2            equ	141	;# 
   174     008E                     PCON            equ	142	;# 
   175     008F                     OSCCON          equ	143	;# 
   176     0090                     OSCTUNE         equ	144	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0093                     SSPMSK          equ	147	;# 
   181     0093                     MSK             equ	147	;# 
   182     0094                     SSPSTAT         equ	148	;# 
   183     0095                     WPUB            equ	149	;# 
   184     0096                     IOCB            equ	150	;# 
   185     0097                     VRCON           equ	151	;# 
   186     0098                     TXSTA           equ	152	;# 
   187     0099                     SPBRG           equ	153	;# 
   188     009A                     SPBRGH          equ	154	;# 
   189     009B                     PWM1CON         equ	155	;# 
   190     009C                     ECCPAS          equ	156	;# 
   191     009D                     PSTRCON         equ	157	;# 
   192     009E                     ADRESL          equ	158	;# 
   193     009F                     ADCON1          equ	159	;# 
   194     0105                     WDTCON          equ	261	;# 
   195     0107                     CM1CON0         equ	263	;# 
   196     0108                     CM2CON0         equ	264	;# 
   197     0109                     CM2CON1         equ	265	;# 
   198     010C                     EEDATA          equ	268	;# 
   199     010C                     EEDAT           equ	268	;# 
   200     010D                     EEADR           equ	269	;# 
   201     010E                     EEDATH          equ	270	;# 
   202     010F                     EEADRH          equ	271	;# 
   203     0185                     SRCON           equ	389	;# 
   204     0187                     BAUDCTL         equ	391	;# 
   205     0188                     ANSEL           equ	392	;# 
   206     0189                     ANSELH          equ	393	;# 
   207     018C                     EECON1          equ	396	;# 
   208     018D                     EECON2          equ	397	;# 
   209     001D                     _CCP2CONbits    set	29
   210     001B                     _CCPR2L         set	27
   211     0012                     _T2CON          set	18
   212     001D                     _CCP2CON        set	29
   213     0007                     _PORTC          set	7
   214     001E                     _ADRESH         set	30
   215     001F                     _ADCON0bits     set	31
   216     001F                     _ADCON0         set	31
   217     0092                     _PR2            set	146
   218     0087                     _TRISC          set	135
   219     0085                     _TRISA          set	133
   220     009E                     _ADRESL         set	158
   221     0188                     _ANSEL          set	392
   222                           
   223                           	psect	cinit
   224     07FC                     start_initialization:	
   225                           ; #config settings
   226                           
   227     07FC                     __initialization:
   228     07FC                     end_of_initialization:	
   229                           ;End of C runtime variable initialization code
   230                           
   231     07FC                     __end_of__initialization:
   232     07FC  0183               	clrf	3
   233     07FD  120A  118A  2FB8   	ljmp	_main	;jump to C main() function
   234                           
   235                           	psect	cstackCOMMON
   236     0070                     __pcstackCOMMON:
   237     0070                     ?_main:
   238     0070                     ?_ADC_Read:	
   239                           ; 1 bytes @ 0x0
   240                           
   241                           
   242                           ; 2 bytes @ 0x0
   243     0070                     	ds	2
   244     0072                     ??_ADC_Read:
   245                           
   246                           ; 1 bytes @ 0x2
   247     0072                     	ds	1
   248     0073                     ??_main:
   249                           
   250                           ; 1 bytes @ 0x3
   251     0073                     	ds	2
   252     0075                     main@ADCResult:
   253                           
   254                           ; 2 bytes @ 0x5
   255     0075                     	ds	2
   256                           
   257                           	psect	maintext
   258     07B8                     __pmaintext:	
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 38 in file "main.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;  ADCResult       2    5[COMMON] unsigned short 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, status,2, status,0, pclath, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : B00/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         0       0       0       0       0
   279 ;;      Locals:         2       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0
   281 ;;      Totals:         4       0       0       0       0
   282 ;;Total ram usage:        4 bytes
   283 ;; Hardware stack levels required when called: 1
   284 ;; This function calls:
   285 ;;		_ADC_Read
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291     07B8                     _main:	
   292                           ;psect for function _main
   293                           
   294     07B8                     l624:	
   295                           ;incstack = 0
   296                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   297                           
   298                           
   299                           ;main.c: 40:     unsigned short ADCResult;;main.c: 42:     TRISA=0xFF;
   300     07B8  30FF               	movlw	255
   301     07B9  1683               	bsf	3,5	;RP0=1, select bank1
   302     07BA  1303               	bcf	3,6	;RP1=0, select bank1
   303     07BB  0085               	movwf	5	;volatile
   304                           
   305                           ;main.c: 43:     ANSEL=0xFF;
   306     07BC  30FF               	movlw	255
   307     07BD  1683               	bsf	3,5	;RP0=1, select bank3
   308     07BE  1703               	bsf	3,6	;RP1=1, select bank3
   309     07BF  0088               	movwf	8	;volatile
   310     07C0                     l626:
   311                           
   312                           ;main.c: 45:     TRISC=0x00;
   313     07C0  1683               	bsf	3,5	;RP0=1, select bank1
   314     07C1  1303               	bcf	3,6	;RP1=0, select bank1
   315     07C2  0187               	clrf	7	;volatile
   316                           
   317                           ;main.c: 46:     PORTC=0x00;
   318     07C3  1283               	bcf	3,5	;RP0=0, select bank0
   319     07C4  1303               	bcf	3,6	;RP1=0, select bank0
   320     07C5  0187               	clrf	7	;volatile
   321     07C6                     l628:
   322                           
   323                           ;main.c: 48:     CCP2CON=0x0F;
   324     07C6  300F               	movlw	15
   325     07C7  009D               	movwf	29	;volatile
   326     07C8                     l630:
   327                           
   328                           ;main.c: 50:     T2CON=0x04;
   329     07C8  3004               	movlw	4
   330     07C9  0092               	movwf	18	;volatile
   331     07CA                     l632:
   332                           
   333                           ;main.c: 51:     PR2=0xFF;
   334     07CA  30FF               	movlw	255
   335     07CB  1683               	bsf	3,5	;RP0=1, select bank1
   336     07CC  1303               	bcf	3,6	;RP1=0, select bank1
   337     07CD  0092               	movwf	18	;volatile
   338     07CE                     l634:
   339                           
   340                           ;main.c: 54:         ADCResult=ADC_Read();
   341     07CE  120A  118A  27A2  120A  118A  	fcall	_ADC_Read
   342     07D3  0871               	movf	?_ADC_Read+1,w
   343     07D4  00F6               	movwf	main@ADCResult+1
   344     07D5  0870               	movf	?_ADC_Read,w
   345     07D6  00F5               	movwf	main@ADCResult
   346     07D7                     l636:
   347                           
   348                           ;main.c: 55:         CCPR2L = (ADCResult>>2);
   349     07D7  0876               	movf	main@ADCResult+1,w
   350     07D8  00F4               	movwf	??_main+1
   351     07D9  0875               	movf	main@ADCResult,w
   352     07DA  00F3               	movwf	??_main
   353     07DB  1003               	clrc
   354     07DC  0CF4               	rrf	??_main+1,f
   355     07DD  0CF3               	rrf	??_main,f
   356     07DE  1003               	clrc
   357     07DF  0CF4               	rrf	??_main+1,f
   358     07E0  0CF3               	rrf	??_main,f
   359     07E1  0873               	movf	??_main,w
   360     07E2  1283               	bcf	3,5	;RP0=0, select bank0
   361     07E3  1303               	bcf	3,6	;RP1=0, select bank0
   362     07E4  009B               	movwf	27	;volatile
   363     07E5                     l638:
   364                           
   365                           ;main.c: 56:         CCP2CONbits.DC2B0 = ADCResult & 0x01;
   366     07E5  0875               	movf	main@ADCResult,w
   367     07E6  3901               	andlw	1
   368     07E7  00F3               	movwf	??_main
   369     07E8  0EF3               	swapf	??_main,f
   370     07E9  081D               	movf	29,w	;volatile
   371     07EA  0673               	xorwf	??_main,w
   372     07EB  39EF               	andlw	-17
   373     07EC  0673               	xorwf	??_main,w
   374     07ED  009D               	movwf	29	;volatile
   375     07EE                     l640:
   376                           
   377                           ;main.c: 57:         CCP2CONbits.DC2B1 = ADCResult & 0x02;
   378     07EE  0875               	movf	main@ADCResult,w
   379     07EF  3902               	andlw	2
   380     07F0  00F3               	movwf	??_main
   381     07F1  0EF3               	swapf	??_main,f
   382     07F2  0DF3               	rlf	??_main,f
   383     07F3  081D               	movf	29,w	;volatile
   384     07F4  0673               	xorwf	??_main,w
   385     07F5  39DF               	andlw	-33
   386     07F6  0673               	xorwf	??_main,w
   387     07F7  009D               	movwf	29	;volatile
   388     07F8  2FCE               	goto	l634
   389     07F9  120A  118A  2800   	ljmp	start
   390     07FC                     __end_of_main:
   391                           
   392                           	psect	text1
   393     07A2                     __ptext1:	
   394 ;; *************** function _ADC_Read *****************
   395 ;; Defined at:
   396 ;;		line 27 in file "main.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  2    0[COMMON] unsigned int 
   403 ;; Registers used:
   404 ;;		wreg
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         2       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0
   412 ;;      Temps:          1       0       0       0       0
   413 ;;      Totals:         3       0       0       0       0
   414 ;;Total ram usage:        3 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423     07A2                     _ADC_Read:	
   424                           ;psect for function _ADC_Read
   425                           
   426     07A2                     l614:	
   427                           ;incstack = 0
   428                           ; Regs used in _ADC_Read: [wreg]
   429                           
   430                           
   431                           ;main.c: 28:     ADCON0=0x0D;
   432     07A2  300D               	movlw	13
   433     07A3  1283               	bcf	3,5	;RP0=0, select bank0
   434     07A4  1303               	bcf	3,6	;RP1=0, select bank0
   435     07A5  009F               	movwf	31	;volatile
   436     07A6                     l616:
   437                           
   438                           ;main.c: 31:     _delay((unsigned long)((25)*(4e6/4000000.0)));
   439     07A6  3008               	movlw	8
   440     07A7  00F2               	movwf	??_ADC_Read
   441     07A8                     u37:
   442     07A8  0BF2               	decfsz	??_ADC_Read,f
   443     07A9  2FA8               	goto	u37
   444     07AA                     l618:
   445                           
   446                           ;main.c: 32:     ADCON0bits.GO=1;
   447     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   448     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   449     07AC  149F               	bsf	31,1	;volatile
   450     07AD                     l31:	
   451                           ;main.c: 33:     while (ADCON0bits.nDONE==1) continue;
   452                           
   453     07AD  189F               	btfsc	31,1	;volatile
   454     07AE  2FB0               	goto	u21
   455     07AF  2FB1               	goto	u20
   456     07B0                     u21:
   457     07B0  2FAD               	goto	l31
   458     07B1                     u20:
   459     07B1                     l620:
   460                           
   461                           ;main.c: 34:     return ((int)ADRESH<<8)|ADRESL;
   462     07B1  081E               	movf	30,w	;volatile
   463     07B2  00F1               	movwf	?_ADC_Read+1
   464     07B3  1683               	bsf	3,5	;RP0=1, select bank1
   465     07B4  1303               	bcf	3,6	;RP1=0, select bank1
   466     07B5  081E               	movf	30,w	;volatile
   467     07B6  00F0               	movwf	?_ADC_Read
   468     07B7                     l34:
   469     07B7  0008               	return
   470     07B8                     __end_of_ADC_Read:
   471     0002                     ___latbits      equ	2
   472     007E                     btemp           set	126	;btemp
   473     007E                     wtemp0          set	126
   474                           
   475                           	psect	config
   476                           
   477                           ;Config register CONFIG1 @ 0x2007
   478                           ;	Oscillator Selection bits
   479                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   480                           ;	Watchdog Timer Enable bit
   481                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   482                           ;	Power-up Timer Enable bit
   483                           ;	PWRTE = OFF, PWRT disabled
   484                           ;	RE3/MCLR pin function select bit
   485                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   486                           ;	Code Protection bit
   487                           ;	CP = OFF, Program memory code protection is disabled
   488                           ;	Data Code Protection bit
   489                           ;	CPD = OFF, Data memory code protection is disabled
   490                           ;	Brown Out Reset Selection bits
   491                           ;	BOREN = ON, BOR enabled
   492                           ;	Internal External Switchover bit
   493                           ;	IESO = ON, Internal/External Switchover mode is enabled
   494                           ;	Fail-Safe Clock Monitor Enabled bit
   495                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   496                           ;	Low Voltage Programming Enable bit
   497                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   498                           ;	In-Circuit Debugger Mode bit
   499                           ;	DEBUG = 0x1, unprogrammed default
   500     2007                     	org	8199
   501     2007  3FF4               	dw	16372
   502                           
   503                           ;Config register CONFIG2 @ 0x2008
   504                           ;	Brown-out Reset Selection bit
   505                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   506                           ;	Flash Program Memory Self Write Enable bits
   507                           ;	WRT = OFF, Write protection off
   508     2008                     	org	8200
   509     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      67
                                              3 COMMON     4     4      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      7       7     50.0%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 23 11:52:54 2025

                     l31 07AD                       l34 07B7                       u20 07B1  
                     u21 07B0                       u37 07A8                      l620 07B1  
                    l614 07A2                      l630 07C8                      l616 07A6  
                    l640 07EE                      l632 07CA                      l624 07B8  
                    l618 07AA                      l634 07CE                      l626 07C0  
                    l636 07D7                      l628 07C6                      l638 07E5  
                    _PR2 0092                     _main 07B8                     btemp 007E  
       __end_of_ADC_Read 07B8                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _T2CON 0012                    _PORTC 0007  
                  _TRISA 0085                    _TRISC 0087                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0073                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   _CCPR2L 001B                ?_ADC_Read 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_ADC_Read 0072  
             __pmaintext 07B8                  _CCP2CON 001D                  __ptext1 07A2  
   end_of_initialization 07FC              _CCP2CONbits 001D      start_initialization 07FC  
              ___latbits 0002                 _ADC_Read 07A2               _ADCON0bits 001F  
          main@ADCResult 0075  
