

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 31 11:22:14 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 12/10/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0004                     fsr             equ	4
    46     0004                     fsr0            equ	4
    47     0000                     indf            equ	0
    48     0000                     indf0           equ	0
    49     0002                     pc              equ	2
    50     0002                     pcl             equ	2
    51     000A                     pclath          equ	10
    52     0003                     status          equ	3
    53     0000                     INDF            equ	0	;# 
    54     0001                     TMR0            equ	1	;# 
    55     0002                     PCL             equ	2	;# 
    56     0003                     STATUS          equ	3	;# 
    57     0004                     FSR             equ	4	;# 
    58     0005                     PORTA           equ	5	;# 
    59     0006                     PORTB           equ	6	;# 
    60     0007                     PORTC           equ	7	;# 
    61     0008                     PORTD           equ	8	;# 
    62     0009                     PORTE           equ	9	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000D                     PIR2            equ	13	;# 
    67     000E                     TMR1            equ	14	;# 
    68     000E                     TMR1L           equ	14	;# 
    69     000F                     TMR1H           equ	15	;# 
    70     0010                     T1CON           equ	16	;# 
    71     0011                     TMR2            equ	17	;# 
    72     0012                     T2CON           equ	18	;# 
    73     0013                     SSPBUF          equ	19	;# 
    74     0014                     SSPCON          equ	20	;# 
    75     0015                     CCPR1           equ	21	;# 
    76     0015                     CCPR1L          equ	21	;# 
    77     0016                     CCPR1H          equ	22	;# 
    78     0017                     CCP1CON         equ	23	;# 
    79     0018                     RCSTA           equ	24	;# 
    80     0019                     TXREG           equ	25	;# 
    81     001A                     RCREG           equ	26	;# 
    82     001B                     CCPR2           equ	27	;# 
    83     001B                     CCPR2L          equ	27	;# 
    84     001C                     CCPR2H          equ	28	;# 
    85     001D                     CCP2CON         equ	29	;# 
    86     001E                     ADRESH          equ	30	;# 
    87     001F                     ADCON0          equ	31	;# 
    88     0081                     OPTION_REG      equ	129	;# 
    89     0085                     TRISA           equ	133	;# 
    90     0086                     TRISB           equ	134	;# 
    91     0087                     TRISC           equ	135	;# 
    92     0088                     TRISD           equ	136	;# 
    93     0089                     TRISE           equ	137	;# 
    94     008C                     PIE1            equ	140	;# 
    95     008D                     PIE2            equ	141	;# 
    96     008E                     PCON            equ	142	;# 
    97     008F                     OSCCON          equ	143	;# 
    98     0090                     OSCTUNE         equ	144	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0093                     SSPMSK          equ	147	;# 
   103     0093                     MSK             equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0095                     WPUB            equ	149	;# 
   106     0096                     IOCB            equ	150	;# 
   107     0097                     VRCON           equ	151	;# 
   108     0098                     TXSTA           equ	152	;# 
   109     0099                     SPBRG           equ	153	;# 
   110     009A                     SPBRGH          equ	154	;# 
   111     009B                     PWM1CON         equ	155	;# 
   112     009C                     ECCPAS          equ	156	;# 
   113     009D                     PSTRCON         equ	157	;# 
   114     009E                     ADRESL          equ	158	;# 
   115     009F                     ADCON1          equ	159	;# 
   116     0105                     WDTCON          equ	261	;# 
   117     0107                     CM1CON0         equ	263	;# 
   118     0108                     CM2CON0         equ	264	;# 
   119     0109                     CM2CON1         equ	265	;# 
   120     010C                     EEDATA          equ	268	;# 
   121     010C                     EEDAT           equ	268	;# 
   122     010D                     EEADR           equ	269	;# 
   123     010E                     EEDATH          equ	270	;# 
   124     010F                     EEADRH          equ	271	;# 
   125     0185                     SRCON           equ	389	;# 
   126     0187                     BAUDCTL         equ	391	;# 
   127     0188                     ANSEL           equ	392	;# 
   128     0189                     ANSELH          equ	393	;# 
   129     018C                     EECON1          equ	396	;# 
   130     018D                     EECON2          equ	397	;# 
   131     0000                     INDF            equ	0	;# 
   132     0001                     TMR0            equ	1	;# 
   133     0002                     PCL             equ	2	;# 
   134     0003                     STATUS          equ	3	;# 
   135     0004                     FSR             equ	4	;# 
   136     0005                     PORTA           equ	5	;# 
   137     0006                     PORTB           equ	6	;# 
   138     0007                     PORTC           equ	7	;# 
   139     0008                     PORTD           equ	8	;# 
   140     0009                     PORTE           equ	9	;# 
   141     000A                     PCLATH          equ	10	;# 
   142     000B                     INTCON          equ	11	;# 
   143     000C                     PIR1            equ	12	;# 
   144     000D                     PIR2            equ	13	;# 
   145     000E                     TMR1            equ	14	;# 
   146     000E                     TMR1L           equ	14	;# 
   147     000F                     TMR1H           equ	15	;# 
   148     0010                     T1CON           equ	16	;# 
   149     0011                     TMR2            equ	17	;# 
   150     0012                     T2CON           equ	18	;# 
   151     0013                     SSPBUF          equ	19	;# 
   152     0014                     SSPCON          equ	20	;# 
   153     0015                     CCPR1           equ	21	;# 
   154     0015                     CCPR1L          equ	21	;# 
   155     0016                     CCPR1H          equ	22	;# 
   156     0017                     CCP1CON         equ	23	;# 
   157     0018                     RCSTA           equ	24	;# 
   158     0019                     TXREG           equ	25	;# 
   159     001A                     RCREG           equ	26	;# 
   160     001B                     CCPR2           equ	27	;# 
   161     001B                     CCPR2L          equ	27	;# 
   162     001C                     CCPR2H          equ	28	;# 
   163     001D                     CCP2CON         equ	29	;# 
   164     001E                     ADRESH          equ	30	;# 
   165     001F                     ADCON0          equ	31	;# 
   166     0081                     OPTION_REG      equ	129	;# 
   167     0085                     TRISA           equ	133	;# 
   168     0086                     TRISB           equ	134	;# 
   169     0087                     TRISC           equ	135	;# 
   170     0088                     TRISD           equ	136	;# 
   171     0089                     TRISE           equ	137	;# 
   172     008C                     PIE1            equ	140	;# 
   173     008D                     PIE2            equ	141	;# 
   174     008E                     PCON            equ	142	;# 
   175     008F                     OSCCON          equ	143	;# 
   176     0090                     OSCTUNE         equ	144	;# 
   177     0091                     SSPCON2         equ	145	;# 
   178     0092                     PR2             equ	146	;# 
   179     0093                     SSPADD          equ	147	;# 
   180     0093                     SSPMSK          equ	147	;# 
   181     0093                     MSK             equ	147	;# 
   182     0094                     SSPSTAT         equ	148	;# 
   183     0095                     WPUB            equ	149	;# 
   184     0096                     IOCB            equ	150	;# 
   185     0097                     VRCON           equ	151	;# 
   186     0098                     TXSTA           equ	152	;# 
   187     0099                     SPBRG           equ	153	;# 
   188     009A                     SPBRGH          equ	154	;# 
   189     009B                     PWM1CON         equ	155	;# 
   190     009C                     ECCPAS          equ	156	;# 
   191     009D                     PSTRCON         equ	157	;# 
   192     009E                     ADRESL          equ	158	;# 
   193     009F                     ADCON1          equ	159	;# 
   194     0105                     WDTCON          equ	261	;# 
   195     0107                     CM1CON0         equ	263	;# 
   196     0108                     CM2CON0         equ	264	;# 
   197     0109                     CM2CON1         equ	265	;# 
   198     010C                     EEDATA          equ	268	;# 
   199     010C                     EEDAT           equ	268	;# 
   200     010D                     EEADR           equ	269	;# 
   201     010E                     EEDATH          equ	270	;# 
   202     010F                     EEADRH          equ	271	;# 
   203     0185                     SRCON           equ	389	;# 
   204     0187                     BAUDCTL         equ	391	;# 
   205     0188                     ANSEL           equ	392	;# 
   206     0189                     ANSELH          equ	393	;# 
   207     018C                     EECON1          equ	396	;# 
   208     018D                     EECON2          equ	397	;# 
   209     0008                     _PORTD          set	8
   210     001E                     _ADRESH         set	30
   211     001F                     _ADCON0bits     set	31
   212     0085                     _TRISA          set	133
   213     0088                     _TRISD          set	136
   214     009E                     _ADRESL         set	158
   215     009F                     _ADCON1bits     set	159
   216     0188                     _ANSEL          set	392
   217                           
   218                           	psect	cinit
   219     07FC                     start_initialization:	
   220                           ; #config settings
   221                           
   222     07FC                     __initialization:
   223     07FC                     end_of_initialization:	
   224                           ;End of C runtime variable initialization code
   225                           
   226     07FC                     __end_of__initialization:
   227     07FC  0183               	clrf	3
   228     07FD  120A  118A  2FD2   	ljmp	_main	;jump to C main() function
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_main:
   233     0070                     ?_ADC_Read:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 2 bytes @ 0x0
   238     0070                     	ds	2
   239     0072                     ??_ADC_Read:
   240     0072                     ??_main:	
   241                           ; 1 bytes @ 0x2
   242                           
   243                           
   244                           ; 1 bytes @ 0x2
   245     0072                     	ds	2
   246     0074                     main@ADCResult:
   247                           
   248                           ; 2 bytes @ 0x4
   249     0074                     	ds	2
   250                           
   251                           	psect	maintext
   252     07D2                     __pmaintext:	
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 53 in file "adc.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  ADCResult       2    4[COMMON] unsigned short 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         2       0       0       0       0
   274 ;;      Temps:          2       0       0       0       0
   275 ;;      Totals:         4       0       0       0       0
   276 ;;Total ram usage:        4 bytes
   277 ;; Hardware stack levels required when called: 1
   278 ;; This function calls:
   279 ;;		_ADC_Read
   280 ;; This function is called by:
   281 ;;		Startup code after reset
   282 ;; This function uses a non-reentrant model
   283 ;;
   284                           
   285     07D2                     _main:	
   286                           ;psect for function _main
   287                           
   288     07D2                     l614:	
   289                           ;incstack = 0
   290                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   291                           
   292                           
   293                           ;adc.c: 54:     unsigned short ADCResult;;adc.c: 56:     TRISD=0x00;
   294     07D2  1683               	bsf	3,5	;RP0=1, select bank1
   295     07D3  1303               	bcf	3,6	;RP1=0, select bank1
   296     07D4  0188               	clrf	8	;volatile
   297                           
   298                           ;adc.c: 57:     PORTD=0;
   299     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   300     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   301     07D7  0188               	clrf	8	;volatile
   302     07D8                     l616:
   303                           
   304                           ;adc.c: 59:     ANSEL=0x01;
   305     07D8  3001               	movlw	1
   306     07D9  1683               	bsf	3,5	;RP0=1, select bank3
   307     07DA  1703               	bsf	3,6	;RP1=1, select bank3
   308     07DB  0088               	movwf	8	;volatile
   309     07DC                     l618:
   310                           
   311                           ;adc.c: 60:     TRISA=0x01;
   312     07DC  3001               	movlw	1
   313     07DD  1683               	bsf	3,5	;RP0=1, select bank1
   314     07DE  1303               	bcf	3,6	;RP1=0, select bank1
   315     07DF  0085               	movwf	5	;volatile
   316     07E0                     l620:
   317                           
   318                           ;adc.c: 63:         ADCResult=ADC_Read();
   319     07E0  120A  118A  27B7  120A  118A  	fcall	_ADC_Read
   320     07E5  0871               	movf	?_ADC_Read+1,w
   321     07E6  00F5               	movwf	main@ADCResult+1
   322     07E7  0870               	movf	?_ADC_Read,w
   323     07E8  00F4               	movwf	main@ADCResult
   324     07E9                     l622:
   325                           
   326                           ;adc.c: 64:         PORTD=ADCResult >> 4;
   327     07E9  0875               	movf	main@ADCResult+1,w
   328     07EA  00F3               	movwf	??_main+1
   329     07EB  0874               	movf	main@ADCResult,w
   330     07EC  00F2               	movwf	??_main
   331     07ED  3004               	movlw	4
   332     07EE                     u45:
   333     07EE  1003               	clrc
   334     07EF  0CF3               	rrf	??_main+1,f
   335     07F0  0CF2               	rrf	??_main,f
   336     07F1  3EFF               	addlw	-1
   337     07F2  1D03               	skipz
   338     07F3  2FEE               	goto	u45
   339     07F4  0872               	movf	??_main,w
   340     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   341     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   342     07F7  0088               	movwf	8	;volatile
   343     07F8  2FE0               	goto	l620
   344     07F9  120A  118A  2800   	ljmp	start
   345     07FC                     __end_of_main:
   346                           
   347                           	psect	text1
   348     07B7                     __ptext1:	
   349 ;; *************** function _ADC_Read *****************
   350 ;; Defined at:
   351 ;;		line 39 in file "adc.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  2    0[COMMON] unsigned int 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   365 ;;      Params:         2       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0
   368 ;;      Totals:         2       0       0       0       0
   369 ;;Total ram usage:        2 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378     07B7                     _ADC_Read:	
   379                           ;psect for function _ADC_Read
   380                           
   381     07B7                     l600:	
   382                           ;incstack = 0
   383                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   384                           
   385                           
   386                           ;adc.c: 40:     ADCON0bits.ADCS=0;
   387     07B7  303F               	movlw	-193
   388     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   389     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   390     07BA  059F               	andwf	31,f	;volatile
   391                           
   392                           ;adc.c: 41:     ADCON0bits.CHS=0b000;
   393     07BB  30C3               	movlw	-61
   394     07BC  059F               	andwf	31,f	;volatile
   395     07BD                     l602:
   396                           
   397                           ;adc.c: 42:     ADCON0bits.ADON=1;
   398     07BD  141F               	bsf	31,0	;volatile
   399     07BE                     l604:
   400                           
   401                           ;adc.c: 43:     ADCON1bits.ADFM=1;
   402     07BE  1683               	bsf	3,5	;RP0=1, select bank1
   403     07BF  1303               	bcf	3,6	;RP1=0, select bank1
   404     07C0  179F               	bsf	31,7	;volatile
   405     07C1                     l606:
   406                           
   407                           ;adc.c: 45:     _delay((unsigned long)((6)*(4e6/4000000.0)));
   408     07C1  2FC2               	nop2	;2 cycle nop
   409     07C2  2FC3               	nop2	;2 cycle nop
   410     07C3  2FC4               	nop2	;2 cycle nop
   411     07C4                     l608:
   412                           
   413                           ;adc.c: 47:     ADCON0bits.GO=1;
   414     07C4  1283               	bcf	3,5	;RP0=0, select bank0
   415     07C5  1303               	bcf	3,6	;RP1=0, select bank0
   416     07C6  149F               	bsf	31,1	;volatile
   417     07C7                     l21:	
   418                           ;adc.c: 49:     while(ADCON0bits.nDONE) continue;
   419                           
   420     07C7  189F               	btfsc	31,1	;volatile
   421     07C8  2FCA               	goto	u31
   422     07C9  2FCB               	goto	u30
   423     07CA                     u31:
   424     07CA  2FC7               	goto	l21
   425     07CB                     u30:
   426     07CB                     l610:
   427                           
   428                           ;adc.c: 51:     return ((int)ADRESH << 8) | ADRESL;
   429     07CB  081E               	movf	30,w	;volatile
   430     07CC  00F1               	movwf	?_ADC_Read+1
   431     07CD  1683               	bsf	3,5	;RP0=1, select bank1
   432     07CE  1303               	bcf	3,6	;RP1=0, select bank1
   433     07CF  081E               	movf	30,w	;volatile
   434     07D0  00F0               	movwf	?_ADC_Read
   435     07D1                     l24:
   436     07D1  0008               	return
   437     07D2                     __end_of_ADC_Read:
   438     0002                     ___latbits      equ	2
   439     007E                     btemp           set	126	;btemp
   440     007E                     wtemp0          set	126
   441                           
   442                           	psect	config
   443                           
   444                           ;Config register CONFIG1 @ 0x2007
   445                           ;	Oscillator Selection bits
   446                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   447                           ;	Watchdog Timer Enable bit
   448                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   449                           ;	Power-up Timer Enable bit
   450                           ;	PWRTE = OFF, PWRT disabled
   451                           ;	RE3/MCLR pin function select bit
   452                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   453                           ;	Code Protection bit
   454                           ;	CP = OFF, Program memory code protection is disabled
   455                           ;	Data Code Protection bit
   456                           ;	CPD = OFF, Data memory code protection is disabled
   457                           ;	Brown Out Reset Selection bits
   458                           ;	BOREN = ON, BOR enabled
   459                           ;	Internal External Switchover bit
   460                           ;	IESO = ON, Internal/External Switchover mode is enabled
   461                           ;	Fail-Safe Clock Monitor Enabled bit
   462                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
   463                           ;	Low Voltage Programming Enable bit
   464                           ;	LVP = ON, RB3/PGM pin has PGM function, low voltage programming enabled
   465                           ;	In-Circuit Debugger Mode bit
   466                           ;	DEBUG = 0x1, unprogrammed default
   467     2007                     	org	8199
   468     2007  3FF4               	dw	16372
   469                           
   470                           ;Config register CONFIG2 @ 0x2008
   471                           ;	Brown-out Reset Selection bit
   472                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   473                           ;	Flash Program Memory Self Write Enable bits
   474                           ;	WRT = OFF, Write protection off
   475     2008                     	org	8200
   476     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      23
                                              2 COMMON     4     4      0
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Read

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      6       6     42.9%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       6      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 31 11:22:14 2025

                     l21 07C7                       l24 07D1                       u30 07CB  
                     u31 07CA                       u45 07EE                      l600 07B7  
                    l610 07CB                      l602 07BD                      l604 07BE  
                    l620 07E0                      l606 07C1                      l622 07E9  
                    l614 07D2                      l608 07C4                      l616 07D8  
                    l618 07DC                     _main 07D2                     btemp 007E  
       __end_of_ADC_Read 07D2                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0072  
                 _ADRESH 001E                   _ADRESL 009E                ?_ADC_Read 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_ADC_Read 0072  
             __pmaintext 07D2                  __ptext1 07B7     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                 _ADC_Read 07B7  
             _ADCON0bits 001F               _ADCON1bits 009F            main@ADCResult 0074  
